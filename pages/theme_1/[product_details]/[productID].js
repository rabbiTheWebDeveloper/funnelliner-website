import Head from "next/head";
import React, { useRef, useState, useEffect } from "react";
import { baseUrl } from "../../../constant/constant";
// Common CSS
import Header from "../../../Components/theme_1/Common/Header";
import MenuBar from "../../../Components/theme_1/Common/Menubar";
import Delivary from "../../../Components/theme_1/Common/Delivary";
import Footer from "../../../Components/theme_1/Common/Footer";
import SocialMedia from "../../../Components/theme_1/Common/SocialMedia";
import TinyFooter from "../../../Components/theme_1/Common/TinyFooter";
import ProductDescription from "../../../Components/theme_1/ProductDetails/ProductDescription";
const axios = require("axios");
import { useRouter } from "next/router";
import { shopId } from "../../../constant/constant";
import { Editor, Frame } from "@craftjs/core";
import Cookies from 'js-cookie'
const index = ({data}) => {
  console.log("shop id",Cookies.get('shop_id'))
  return (
    <>
      <Head>
        <title>Sales Solution Theme_1</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='frontend_asset/images/Logo.png' />
        <link rel='preconnect' href='https://fonts.googleapis.com' />
        <link rel='preconnect' href='https://fonts.gstatic.com' crossorigin />
        <link
          href='https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;500;600;700;800&display=swap'
          rel='stylesheet'
        />
      </Head>
      <main>
        <Header></Header>
			<Editor resolver={{ MenuBar }}>
				<Frame>
					<MenuBar menu1={'Home'} menu2={'Shop'} menu3={'About Us'} menu4={'Contact Us'} fontSize={'15'} />
				</Frame>
			</Editor>
        <ProductDescription data={data.data}></ProductDescription>
        <Delivary></Delivary>
        <Footer></Footer>
        <SocialMedia></SocialMedia>
        <TinyFooter></TinyFooter>
      </main>
      <footer></footer>
    </>
  );
};

export default index;

export async function getServerSideProps(context) {
  const { params } = context;
  const response = await fetch(
    `${process.env.API_URL}v1/customer/products/${params.productID}`,
    {
      method: "get",
      headers: {
      //  "shop-id": params.product_details,
      "shop-id": params.product_details
      },
    }
  );
  const data = await response?.json();
  return {
    props: { data },
  };
}
